➜  03aks git:(master) ✗ ./02.plan.sh 
Acquiring state lock. This may take a few moments...
Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

data.azurerm_virtual_network.vnet1: Refreshing state...

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_kubernetes_cluster.k8s will be created
  + resource "azurerm_kubernetes_cluster" "k8s" {
      + dns_prefix              = "accu"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + kube_admin_config       = (known after apply)
      + kube_admin_config_raw   = (sensitive value)
      + kube_config             = (known after apply)
      + kube_config_raw         = (sensitive value)
      + kubelet_identity        = (known after apply)
      + kubernetes_version      = (known after apply)
      + location                = "koreacentral"
      + name                    = "accu-aks-01-rg"
      + node_resource_group     = "accu-aks-01-nodepool-rg"
      + private_cluster_enabled = (known after apply)
      + private_fqdn            = (known after apply)
      + private_link_enabled    = (known after apply)
      + resource_group_name     = "accu-aks-01-rg"
      + sku_tier                = "Free"

      + addon_profile {

          + oms_agent {
              + enabled                    = true
              + log_analytics_workspace_id = (known after apply)
              + oms_agent_identity         = (known after apply)
            }
        }

      + auto_scaler_profile {
          + balance_similar_node_groups      = (known after apply)
          + max_graceful_termination_sec     = (known after apply)
          + scale_down_delay_after_add       = (known after apply)
          + scale_down_delay_after_delete    = (known after apply)
          + scale_down_delay_after_failure   = (known after apply)
          + scale_down_unneeded              = (known after apply)
          + scale_down_unready               = (known after apply)
          + scale_down_utilization_threshold = (known after apply)
          + scan_interval                    = (known after apply)
        }

      + default_node_pool {
          + enable_auto_scaling   = true
          + enable_node_public_ip = false
          + max_count             = 2
          + max_pods              = (known after apply)
          + min_count             = 1
          + name                  = "agentpool"
          + node_count            = 1
          + orchestrator_version  = (known after apply)
          + os_disk_size_gb       = (known after apply)
          + type                  = "VirtualMachineScaleSets"
          + vm_size               = "Standard_B4ms"
          + vnet_subnet_id        = (known after apply)
        }

      + linux_profile {
          + admin_username = "ubuntu"

          + ssh_key {
              + key_data = <<~EOT
                    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQChfQiMTjd9xj7iwTun0IH5nzML8INTS4o6ZOmfwrCW/P7AuURNQWVQliboQ7pmkdeBnADZHeFvejRiDBfXGzzQ2AULoPwrH6pX+pJL0vF5B2h/L7PfMoAc8e8nCbJw/G+6HpWfaRPFYKOVjbVp9gfOJd/TyzGOhUadOliZwRDYPLA603auum1C24wK15ayT425WhZnrGHfMWxNhZRIp9y0D+PqBE+bNjvGmapuGg211SX/slgTZnKfMFm0NMuB0jyhSqdAs1+Kba+wFbjqn080bzvSjtRT+TDukweKYJ6VZG3sA6zfw8f+1THVuNCwsCh9E33bhalF1HLxotuA7rz3 root@terraform
                EOT
            }
        }

      + network_profile {
          + dns_service_ip     = "192.168.0.10"
          + docker_bridge_cidr = "172.17.0.1/16"
          + load_balancer_sku  = "standard"
          + network_plugin     = "kubenet"
          + network_policy     = "calico"
          + outbound_type      = "loadBalancer"
          + pod_cidr           = (known after apply)
          + service_cidr       = "192.168.0.0/20"

          + load_balancer_profile {
              + effective_outbound_ips    = (known after apply)
              + idle_timeout_in_minutes   = (known after apply)
              + managed_outbound_ip_count = (known after apply)
              + outbound_ip_address_ids   = (known after apply)
              + outbound_ip_prefix_ids    = (known after apply)
              + outbound_ports_allocated  = (known after apply)
            }
        }

      + role_based_access_control {
          + enabled = (known after apply)

          + azure_active_directory {
              + admin_group_object_ids = (known after apply)
              + client_app_id          = (known after apply)
              + managed                = (known after apply)
              + server_app_id          = (known after apply)
              + server_app_secret      = (sensitive value)
              + tenant_id              = (known after apply)
            }
        }

      + service_principal {
          + client_id     = "9e3476c9-dfba-4deb-a1fd-0bb9902297ba"
          + client_secret = (sensitive value)
        }

      + windows_profile {
          + admin_password = (sensitive value)
          + admin_username = (known after apply)
        }
    }

  # azurerm_log_analytics_solution.k8s will be created
  + resource "azurerm_log_analytics_solution" "k8s" {
      + id                    = (known after apply)
      + location              = "koreacentral"
      + resource_group_name   = "accu-aks-01-rg"
      + solution_name         = "ContainerInsights"
      + workspace_name        = (known after apply)
      + workspace_resource_id = (known after apply)

      + plan {
          + name      = (known after apply)
          + product   = "OMSGallery/ContainerInsights"
          + publisher = "Microsoft"
        }
    }

  # azurerm_log_analytics_workspace.k8s will be created
  + resource "azurerm_log_analytics_workspace" "k8s" {
      + id                   = (known after apply)
      + location             = "koreacentral"
      + name                 = (known after apply)
      + portal_url           = (known after apply)
      + primary_shared_key   = (sensitive value)
      + resource_group_name  = "accu-aks-01-rg"
      + retention_in_days    = (known after apply)
      + secondary_shared_key = (sensitive value)
      + sku                  = "PerGB2018"
      + workspace_id         = (known after apply)
    }

  # azurerm_network_security_group.k8s will be created
  + resource "azurerm_network_security_group" "k8s" {
      + id                  = (known after apply)
      + location            = "koreacentral"
      + name                = "aks-accu-aks-01-security_group"
      + resource_group_name = "accu-aks-01-rg"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "SSH1"
              + priority                                   = 1001
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "SSH2"
              + priority                                   = 1002
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
        ]
      + tags                = {
          + "environment" = "Terraform Demo"
        }
    }

  # azurerm_resource_group.k8s will be created
  + resource "azurerm_resource_group" "k8s" {
      + id       = (known after apply)
      + location = "koreacentral"
      + name     = "accu-aks-01-rg"
      + tags     = {
          + "cz_extra"   = "Terraform"
          + "cz_org"     = "플랫폼3그룹"
          + "cz_owner"   = "박준호"
          + "cz_project" = "Cloud Platform MVP"
          + "cz_stage"   = "개발"
          + "owner"      = "JunHo"
          + "purpose"    = "aks-accu-aks-01"
        }
    }

  # azurerm_subnet.subnet-01 will be created
  + resource "azurerm_subnet" "subnet-01" {
      + address_prefix                                 = "10.10.201.0/24"
      + address_prefixes                               = (known after apply)
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "common-subnet-aks-01"
      + resource_group_name                            = "accu-vnet-rg"
      + virtual_network_name                           = "accu-common-koreacentral-vnet"
    }

  # random_id.log_analytics_workspace_name_suffix will be created
  + resource "random_id" "log_analytics_workspace_name_suffix" {
      + b64         = (known after apply)
      + b64_std     = (known after apply)
      + b64_url     = (known after apply)
      + byte_length = 8
      + dec         = (known after apply)
      + hex         = (known after apply)
      + id          = (known after apply)
    }

Plan: 7 to add, 0 to change, 0 to destroy.

Warning: "address_prefix": [DEPRECATED] Use the `address_prefixes` property instead.

  on modify-variables.tf line 30, in resource "azurerm_subnet" "subnet-01":
  30: resource "azurerm_subnet" "subnet-01" {



------------------------------------------------------------------------

This plan was saved to: ftplan.out

To perform exactly these actions, run the following command to apply:
    terraform apply "ftplan.out"

➜  03aks git:(master) ✗ ./03.apply.sh 